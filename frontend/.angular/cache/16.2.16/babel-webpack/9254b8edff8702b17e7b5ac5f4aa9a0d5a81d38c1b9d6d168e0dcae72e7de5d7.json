{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class LanguageService {\n  constructor() {\n    this.currentLanguageSubject = new BehaviorSubject('es');\n    this.currentLanguage$ = this.currentLanguageSubject.asObservable();\n    // Verificar si el usuario tiene una preferencia guardada\n    const savedLanguage = localStorage.getItem('language');\n    if (savedLanguage) {\n      this.currentLanguageSubject.next(savedLanguage);\n    } else {\n      // Usar el idioma del navegador\n      const browserLang = navigator.language.split('-')[0];\n      this.currentLanguageSubject.next(browserLang === 'es' ? 'es' : 'en');\n    }\n  }\n  toggleLanguage() {\n    const newValue = this.currentLanguageSubject.value === 'es' ? 'en' : 'es';\n    this.currentLanguageSubject.next(newValue);\n    localStorage.setItem('language', newValue);\n  }\n  getCurrentLanguage() {\n    return this.currentLanguageSubject.value;\n  }\n  static {\n    this.ɵfac = function LanguageService_Factory(t) {\n      return new (t || LanguageService)();\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: LanguageService,\n      factory: LanguageService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["BehaviorSubject","LanguageService","constructor","currentLanguageSubject","currentLanguage$","asObservable","savedLanguage","localStorage","getItem","next","browserLang","navigator","language","split","toggleLanguage","newValue","value","setItem","getCurrentLanguage","factory","ɵfac","providedIn"],"sources":["/app/src/app/services/language.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LanguageService {\r\n  private currentLanguageSubject = new BehaviorSubject<string>('es');\r\n  currentLanguage$ = this.currentLanguageSubject.asObservable();\r\n\r\n  constructor() {\r\n    // Verificar si el usuario tiene una preferencia guardada\r\n    const savedLanguage = localStorage.getItem('language');\r\n    if (savedLanguage) {\r\n      this.currentLanguageSubject.next(savedLanguage);\r\n    } else {\r\n      // Usar el idioma del navegador\r\n      const browserLang = navigator.language.split('-')[0];\r\n      this.currentLanguageSubject.next(browserLang === 'es' ? 'es' : 'en');\r\n    }\r\n  }\r\n\r\n  toggleLanguage(): void {\r\n    const newValue = this.currentLanguageSubject.value === 'es' ? 'en' : 'es';\r\n    this.currentLanguageSubject.next(newValue);\r\n    localStorage.setItem('language', newValue);\r\n  }\r\n\r\n  getCurrentLanguage(): string {\r\n    return this.currentLanguageSubject.value;\r\n  }\r\n} "],"mappings":"AACA,SAASA,eAAe,QAAQ,MAAM;;AAKtC,OAAM,MAAOC,eAAe;EAI1BC,YAAA;IAHQ,KAAAC,sBAAsB,GAAG,IAAIH,eAAe,CAAS,IAAI,CAAC;IAClE,KAAAI,gBAAgB,GAAG,IAAI,CAACD,sBAAsB,CAACE,YAAY,EAAE;IAG3D;IACA,MAAMC,aAAa,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IACtD,IAAIF,aAAa,EAAE;MACjB,IAAI,CAACH,sBAAsB,CAACM,IAAI,CAACH,aAAa,CAAC;KAChD,MAAM;MACL;MACA,MAAMI,WAAW,GAAGC,SAAS,CAACC,QAAQ,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MACpD,IAAI,CAACV,sBAAsB,CAACM,IAAI,CAACC,WAAW,KAAK,IAAI,GAAG,IAAI,GAAG,IAAI,CAAC;;EAExE;EAEAI,cAAcA,CAAA;IACZ,MAAMC,QAAQ,GAAG,IAAI,CAACZ,sBAAsB,CAACa,KAAK,KAAK,IAAI,GAAG,IAAI,GAAG,IAAI;IACzE,IAAI,CAACb,sBAAsB,CAACM,IAAI,CAACM,QAAQ,CAAC;IAC1CR,YAAY,CAACU,OAAO,CAAC,UAAU,EAAEF,QAAQ,CAAC;EAC5C;EAEAG,kBAAkBA,CAAA;IAChB,OAAO,IAAI,CAACf,sBAAsB,CAACa,KAAK;EAC1C;;;uBAxBWf,eAAe;IAAA;EAAA;;;aAAfA,eAAe;MAAAkB,OAAA,EAAflB,eAAe,CAAAmB,IAAA;MAAAC,UAAA,EAFd;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
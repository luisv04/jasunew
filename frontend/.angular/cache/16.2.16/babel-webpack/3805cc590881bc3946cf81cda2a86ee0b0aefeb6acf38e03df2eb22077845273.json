{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class ThemeService {\n  constructor() {\n    this.isDarkModeSubject = new BehaviorSubject(false);\n    this.isDarkMode$ = this.isDarkModeSubject.asObservable();\n    // Verificar si el usuario tiene una preferencia guardada\n    const savedTheme = localStorage.getItem('theme');\n    if (savedTheme) {\n      this.isDarkModeSubject.next(savedTheme === 'dark');\n      document.documentElement.classList.toggle('dark', savedTheme === 'dark');\n    } else {\n      // Verificar la preferencia del sistema\n      const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;\n      this.isDarkModeSubject.next(prefersDark);\n      document.documentElement.classList.toggle('dark', prefersDark);\n    }\n  }\n  toggleTheme() {\n    const newValue = !this.isDarkModeSubject.value;\n    this.isDarkModeSubject.next(newValue);\n    document.documentElement.classList.toggle('dark', newValue);\n    localStorage.setItem('theme', newValue ? 'dark' : 'light');\n  }\n  static {\n    this.ɵfac = function ThemeService_Factory(t) {\n      return new (t || ThemeService)();\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ThemeService,\n      factory: ThemeService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["BehaviorSubject","ThemeService","constructor","isDarkModeSubject","isDarkMode$","asObservable","savedTheme","localStorage","getItem","next","document","documentElement","classList","toggle","prefersDark","window","matchMedia","matches","toggleTheme","newValue","value","setItem","factory","ɵfac","providedIn"],"sources":["/app/src/app/services/theme.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ThemeService {\r\n  private isDarkModeSubject = new BehaviorSubject<boolean>(false);\r\n  isDarkMode$ = this.isDarkModeSubject.asObservable();\r\n\r\n  constructor() {\r\n    // Verificar si el usuario tiene una preferencia guardada\r\n    const savedTheme = localStorage.getItem('theme');\r\n    if (savedTheme) {\r\n      this.isDarkModeSubject.next(savedTheme === 'dark');\r\n      document.documentElement.classList.toggle('dark', savedTheme === 'dark');\r\n    } else {\r\n      // Verificar la preferencia del sistema\r\n      const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;\r\n      this.isDarkModeSubject.next(prefersDark);\r\n      document.documentElement.classList.toggle('dark', prefersDark);\r\n    }\r\n  }\r\n\r\n  toggleTheme(): void {\r\n    const newValue = !this.isDarkModeSubject.value;\r\n    this.isDarkModeSubject.next(newValue);\r\n    document.documentElement.classList.toggle('dark', newValue);\r\n    localStorage.setItem('theme', newValue ? 'dark' : 'light');\r\n  }\r\n} "],"mappings":"AACA,SAASA,eAAe,QAAQ,MAAM;;AAKtC,OAAM,MAAOC,YAAY;EAIvBC,YAAA;IAHQ,KAAAC,iBAAiB,GAAG,IAAIH,eAAe,CAAU,KAAK,CAAC;IAC/D,KAAAI,WAAW,GAAG,IAAI,CAACD,iBAAiB,CAACE,YAAY,EAAE;IAGjD;IACA,MAAMC,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAChD,IAAIF,UAAU,EAAE;MACd,IAAI,CAACH,iBAAiB,CAACM,IAAI,CAACH,UAAU,KAAK,MAAM,CAAC;MAClDI,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACC,MAAM,CAAC,MAAM,EAAEP,UAAU,KAAK,MAAM,CAAC;KACzE,MAAM;MACL;MACA,MAAMQ,WAAW,GAAGC,MAAM,CAACC,UAAU,CAAC,8BAA8B,CAAC,CAACC,OAAO;MAC7E,IAAI,CAACd,iBAAiB,CAACM,IAAI,CAACK,WAAW,CAAC;MACxCJ,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACC,MAAM,CAAC,MAAM,EAAEC,WAAW,CAAC;;EAElE;EAEAI,WAAWA,CAAA;IACT,MAAMC,QAAQ,GAAG,CAAC,IAAI,CAAChB,iBAAiB,CAACiB,KAAK;IAC9C,IAAI,CAACjB,iBAAiB,CAACM,IAAI,CAACU,QAAQ,CAAC;IACrCT,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACC,MAAM,CAAC,MAAM,EAAEM,QAAQ,CAAC;IAC3DZ,YAAY,CAACc,OAAO,CAAC,OAAO,EAAEF,QAAQ,GAAG,MAAM,GAAG,OAAO,CAAC;EAC5D;;;uBAvBWlB,YAAY;IAAA;EAAA;;;aAAZA,YAAY;MAAAqB,OAAA,EAAZrB,YAAY,CAAAsB,IAAA;MAAAC,UAAA,EAFX;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}